
    {
        "id": "f60de3fc5c8806d7",
        "type": "subflow",
        "name": "Get_state",
        "info": "Requesting the current status of SmartUnity objects\r\n\r\n\r\n\r\n### Inputs \r\n\r\n: payload (json) :  A json file with a list of object IDs for the status request\r\n\r\n### Outputs\r\n\r\n: payload (string) : Command to SmartUnity\r\n\r\n### Configuration\r\n\r\n#### **Object type**\r\n\r\nChoosing the request format: for **Common** type or **Modbus**.\r\n\r\n`Default:` **Common**\r\n\r\n\r\n### Format of Json\r\n\r\n\r\nThe Json file must be in the next format:\r\n\r\n**Common objects**:\r\n`{ object ID : \"true\" }`\r\n\r\n**Modbus objects**:\r\n`{ object ID : Modbus module object ID }`\r\n\r\n",
        "category": "SmartUnity",
        "in": [
            {
                "x": 100,
                "y": 140,
                "wires": [
                    {
                        "id": "402c4d2398c6224f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1080,
                "y": 140,
                "wires": [
                    {
                        "id": "8e331c5e64e354f6",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "TYPE",
                "type": "str",
                "value": "common",
                "ui": {
                    "icon": "font-awesome/fa-clone",
                    "label": {
                        "ru": "Object type"
                    },
                    "type": "select",
                    "opts": {
                        "opts": [
                            {
                                "l": {
                                    "ru": "Common"
                                },
                                "v": "common"
                            },
                            {
                                "l": {
                                    "ru": "Modbus"
                                },
                                "v": "modbus"
                            }
                        ]
                    }
                }
            }
        ],
        "meta": {
            "type": "Status request",
            "version": "1.2.1",
            "author": "@on_sheff Anton Shefov <a.shefov@gmail.com>",
            "desc": "Requests the status of objects",
			"license": "MIT",
            "keywords": "SmartUnity, SU"
        },
        "color": "#3BB08F",
        "icon": "font-awesome/fa-refresh",
        "status": {
            "x": 1080,
            "y": 260,
            "wires": [
                {
                    "id": "87fb11e5f7e7a32c",
                    "port": 0
                },
                {
                    "id": "5f62f543a02f82d2",
                    "port": 0
                }
            ]
        },
		"flow": [
			{
        "id": "30b7ade4b3c3d396",
        "type": "function",
        "z": "f60de3fc5c8806d7",
        "name": "to_SmartUnity",
        "func": "var tmp = {};\nvar command = 0;\nvar value = 0;\nvar error = false;\nvar status = \"\";\n\nif (msg.type != null){\n    if (msg.payload != null){\n        switch (msg.type) {\n            case \"GET_STATUS\":\n                command = 1;\n                break;\n            case \"GET_STATUS_MB\":\n                command = 1;\n                value = msg.payload;\n                break;\n            default:\n                error = true;\n                status = 'Unknown object type (' + msg.type + ') + ID: ' + msg.object_id;\n                node.error(status);\n                break;\n        }\n    } else{\n        error = true;\n        status = 'Payload is empty. ID: ' + msg.object_id;\n        node.error(status);\n    }    \n} else {\n    error = true;\n    status = 'Object type is empty. ID: ' + msg.object_id;\n    node.error(status);\n}\n\nif (msg.object_id != null){\n    if (1024 <= msg.object_id && msg.object_id <= 9999){\n        tmp.obj = msg.object_id;\n    } else{\n        error = true;\n        status = 'Object_ID is out of range. ID: ' + msg.object_id;\n        node.error(status);\n    }   \n} else {\n    error = true;\n    status = 'Object_ID is empty';\n    node.error(status);\n}\n\nif (!error){\n    status = msg.object_id + \": \" + msg.payload.toString();\n    tmp.start = 52428;\n    tmp.cmd = command;\n    tmp.len = 2;\n    tmp.val = value;\n    msg.payload = tmp;\n    return [msg, { \"payload\": { fill: \"green\", shape: \"dot\", text: status}}];\n} else {\n    return [null, { \"payload\": { fill: \"red\", shape: \"ring\", text: status }}]\n}\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 140,
        "wires": [
            [
                "8e331c5e64e354f6"
            ],
            [
                "5f62f543a02f82d2"
            ]
        ]
    },
    {
        "id": "8e331c5e64e354f6",
        "type": "binary",
        "z": "f60de3fc5c8806d7",
        "name": "",
        "property": "payload",
        "pattern": "l16=>start,l16 => obj, l16 => cmd, x16, x16,l16=>len,l16=>val",
        "x": 950,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "56b68999746c53ce",
        "type": "delay",
        "z": "f60de3fc5c8806d7",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 575,
        "y": 140,
        "wires": [
            [
                "30b7ade4b3c3d396"
            ]
        ],
        "l": false
    },
    {
        "id": "7ff4eeadf8a5716a",
        "type": "split",
        "z": "f60de3fc5c8806d7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 275,
        "y": 180,
        "wires": [
            [
                "8eb24e30924742c8"
            ]
        ],
        "l": false
    },
    {
        "id": "8eb24e30924742c8",
        "type": "change",
        "z": "f60de3fc5c8806d7",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "parts",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "type",
                "pt": "msg",
                "to": "GET_STATUS_MB",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "object_id",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "topic",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$number(msg.payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 375,
        "y": 180,
        "wires": [
            [
                "f35218fbbd66920e"
            ]
        ],
        "l": false
    },
    {
        "id": "402c4d2398c6224f",
        "type": "switch",
        "z": "f60de3fc5c8806d7",
        "name": "",
        "property": "TYPE",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "common",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "modbus",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 185,
        "y": 140,
        "wires": [
            [
                "35b55df410e8d171"
            ],
            [
                "7ff4eeadf8a5716a"
            ]
        ],
        "l": false
    },
    {
        "id": "35b55df410e8d171",
        "type": "split",
        "z": "f60de3fc5c8806d7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 275,
        "y": 100,
        "wires": [
            [
                "bb5349d87ba6e7f7"
            ]
        ],
        "l": false
    },
    {
        "id": "bb5349d87ba6e7f7",
        "type": "change",
        "z": "f60de3fc5c8806d7",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "parts",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "type",
                "pt": "msg",
                "to": "GET_STATUS",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "object_id",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "topic",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$number(msg.payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 375,
        "y": 100,
        "wires": [
            [
                "f35218fbbd66920e"
            ]
        ],
        "l": false
    },
    {
        "id": "840344748736b0da",
        "type": "status",
        "z": "f60de3fc5c8806d7",
        "name": "",
        "scope": [
            "56b68999746c53ce"
        ],
        "x": 120,
        "y": 340,
        "wires": [
            [
                "d257c307ce5e28bb"
            ]
        ]
    },
    {
        "id": "d257c307ce5e28bb",
        "type": "change",
        "z": "f60de3fc5c8806d7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "status.text",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$number(payload)",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "status",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 255,
        "y": 340,
        "wires": [
            [
                "13fcc9f2551e7658"
            ]
        ],
        "l": false
    },
    {
        "id": "13fcc9f2551e7658",
        "type": "switch",
        "z": "f60de3fc5c8806d7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "150",
                "vt": "num"
            },
            {
                "t": "lt",
                "v": "50",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 355,
        "y": 340,
        "wires": [
            [
                "cc09dbc158a3b455"
            ],
            [
                "0f553a13c10e3779"
            ]
        ],
        "l": false
    },
    {
        "id": "cc09dbc158a3b455",
        "type": "trigger",
        "z": "f60de3fc5c8806d7",
        "name": "",
        "op1": "",
        "op2": "false",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 565,
        "y": 340,
        "wires": [
            [
                "b50ce66f2ec6495a"
            ]
        ],
        "l": false
    },
    {
        "id": "0f553a13c10e3779",
        "type": "change",
        "z": "f60de3fc5c8806d7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "allow_recieve",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 455,
        "y": 380,
        "wires": [
            [
                "cc09dbc158a3b455"
            ]
        ],
        "l": false
    },
    {
        "id": "b50ce66f2ec6495a",
        "type": "change",
        "z": "f60de3fc5c8806d7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "allow_recieve",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 675,
        "y": 300,
        "wires": [
            [
                "07fa8e2bc6744c05"
            ]
        ],
        "l": false
    },
    {
        "id": "aca986de9627f350",
        "type": "inject",
        "z": "f60de3fc5c8806d7",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 530,
        "y": 260,
        "wires": [
            [
                "b50ce66f2ec6495a"
            ]
        ]
    },
    {
        "id": "f35218fbbd66920e",
        "type": "switch",
        "z": "f60de3fc5c8806d7",
        "name": "",
        "property": "allow_recieve",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 475,
        "y": 140,
        "wires": [
            [
                "56b68999746c53ce"
            ]
        ],
        "l": false
    },
    {
        "id": "07fa8e2bc6744c05",
        "type": "switch",
        "z": "f60de3fc5c8806d7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 775,
        "y": 300,
        "wires": [
            [
                "87fb11e5f7e7a32c"
            ]
        ],
        "l": false
    },
    {
        "id": "87fb11e5f7e7a32c",
        "type": "template",
        "z": "f60de3fc5c8806d7",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{ \"fill\": \"red\", \"shape\": \"dot\", \"text\": \"Buffer overload! New commands will be ignored.\" }",
        "output": "json",
        "x": 920,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "5f62f543a02f82d2",
        "type": "switch",
        "z": "f60de3fc5c8806d7",
        "name": "",
        "property": "allow_recieve",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 915,
        "y": 220,
        "wires": [
            []
        ],
        "l": false
    }
		]
    }