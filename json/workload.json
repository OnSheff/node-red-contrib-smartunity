
    {
        "id": "f05f802bc66d0b79",
        "type": "subflow",
        "name": "Workload",
        "info": "Measures the flow of messages.\r\n\r\n### Outputs\r\n1. Objects_dict\r\n: topic (string) : **objects_dict**\r\n: payload (dict) : Dictionary with the number of messages per ID\r\n\r\n2. Load_min\r\n: topic (string) : **load_min**\r\n: payload (number) : Number of messages per minute.\r\n\r\n3. Load_hour\r\n: topic (string) : **load_hour**\r\n: payload (number) : Average number of messages per minute per hour.\r\n",
        "category": "SmartUnity",
        "in": [
            {
                "x": 80,
                "y": 140,
                "wires": [
                    {
                        "id": "595d7185fd85a4af"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 620,
                "y": 140,
                "wires": [
                    {
                        "id": "d5a1f654a6246d12",
                        "port": 0
                    },
                    {
                        "id": "aef4962d510c6662",
                        "port": 0
                    },
                    {
                        "id": "0e36506ced54bed0",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "OBJ",
                "type": "num",
                "value": "",
                "ui": {
                    "label": {
                        "ru": "msg.payload.obj"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "num"
                        ]
                    }
                }
            }
        ],
        "meta": {
            "type": "Workload",
            "version": "1.0.2",
            "author": "Anton Shefov <a.shefov@gmail.com>",
            "desc": "Measures the flow of messages",
            "keywords": "SmartUnity, SU",
            "license": "MIT"
        },
        "color": "#3BB08F",
        "inputLabels": [
            "from_SU"
        ],
        "icon": "font-awesome/fa-bar-chart",
        "status": {
            "x": 620,
            "y": 260,
            "wires": [
                {
                    "id": "cc8e3f8c5c770c35",
                    "port": 0
                },
                {
                    "id": "82a48b34a088f151",
                    "port": 0
                }
            ]
        },
		"flow" : [
		{
        "id": "595d7185fd85a4af",
        "type": "function",
        "z": "f05f802bc66d0b79",
        "name": "Counter",
        "func": "var objects_dict = context.get(\"objects_dict\");\nvar timer = context.get(\"timer\");\nvar all_packets = 0;\nvar all_packets_counter = context.get(\"all_packets_counter\");\nvar minute_packets = 0;\n\nif (msg.payload.obj == env.get('OBJ')){\n    if (objects_dict[msg.payload.to] != null){\n        objects_dict[msg.payload.to] = objects_dict[msg.payload.to] + 1;\n    } else {\n        objects_dict[msg.payload.to] = 1;\n    }\n    context.set(\"objects_dict\", objects_dict);\n} else if (msg.topic == \"seconds\"){\n    context.set(\"timer\", timer + 1);\n    if ((timer % 60) == 0) {\n        all_packets = Object.values(objects_dict).reduce((partialSum, a) => partialSum + a, 0);\n        minute_packets = all_packets - all_packets_counter;\n        if ((timer % 3600) == 0) {\n            context.set(\"objects_dict\", {});\n            context.set(\"all_packets_counter\", 0);\n            return [{ \"payload\": objects_dict }, { \"payload\": Math.round(all_packets / 60) }, { \"payload\": minute_packets }]\n        }\n        context.set(\"all_packets_counter\", all_packets);\n        return [null, null, { \"payload\": minute_packets }]      \n    }\n} else if (msg.topic == \"dict\"){\n    return [{ \"payload\": objects_dict }, null, null]\n}",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "// Добавленный здесь код будет исполняться\n// однократно при развертывании узла.\ncontext.set(\"objects_dict\", {});\ncontext.set(\"timer\", 1);\ncontext.set(\"all_packets_counter\", 0);",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 140,
        "wires": [
            [
                "d5a1f654a6246d12"
            ],
            [
                "0e36506ced54bed0"
            ],
            [
                "aef4962d510c6662",
                "cc8e3f8c5c770c35"
            ]
        ]
    },
    {
        "id": "b33d801b744e9c31",
        "type": "inject",
        "z": "f05f802bc66d0b79",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "seconds",
        "payload": "true",
        "payloadType": "bool",
        "x": 165,
        "y": 200,
        "wires": [
            [
                "595d7185fd85a4af"
            ]
        ],
        "l": false
    },
    {
        "id": "cc8e3f8c5c770c35",
        "type": "template",
        "z": "f05f802bc66d0b79",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"fill\": \"green\",\n    \"shape\":\"dot\",\n    \"text\": \"{{payload}} mes/min\"\n}",
        "output": "json",
        "x": 480,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "82a48b34a088f151",
        "type": "inject",
        "z": "f05f802bc66d0b79",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"fill\":\"grey\",\"shape\":\"ring\",\"text\":\"waiting\"}",
        "payloadType": "json",
        "x": 525,
        "y": 320,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "d5a1f654a6246d12",
        "type": "change",
        "z": "f05f802bc66d0b79",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "objects_dict",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 475,
        "y": 80,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "aef4962d510c6662",
        "type": "change",
        "z": "f05f802bc66d0b79",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "load_min",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 475,
        "y": 200,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "0e36506ced54bed0",
        "type": "change",
        "z": "f05f802bc66d0b79",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "load_hour",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 475,
        "y": 140,
        "wires": [
            []
        ],
        "l": false
    }
		]
    }